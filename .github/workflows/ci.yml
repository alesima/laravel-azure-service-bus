name: CI/CD Pipeline

on:
    push:
        branches:
            - master
    pull_request:
        branches:
            - master

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php: [7.2, 7.3, 7.4]

        steps:
            # Checkout the repository
            - name: Checkout code
              uses: actions/checkout@v3

            # Setup PHP
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: mbstring, json, intl, xdebug
                  coverage: xdebug

            # Cache dependencies
            - name: Get composer cache directory
              id: composer-cache
              run: echo "cache-key=composer-$(md5sum composer.lock | cut -d' ' -f1)" >> $GITHUB_ENV

            - name: Cache Composer dependencies
              uses: actions/cache@v3
              with:
                  path: vendor
                  key: ${{ env.cache-key }}
                  restore-keys: |
                      composer-

            # Install dependencies
            - name: Install dependencies
              run: composer install --prefer-dist --no-progress --no-suggest --dev

            # Run static analysis (optional, but recommended)
            - name: Run PHPStan
              run: vendor/bin/phpstan analyse

            # Create build directory
            - name: Create build directory
              run: mkdir -p build/logs

            # Run tests
            - name: Run tests
              run: vendor/bin/phpunit --coverage-clover=build/logs/clover.xml

            # Upload coverage to Coveralls
            - name: Upload coverage to Coveralls
              run: vendor/bin/coveralls -v
              env:
                  COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}

    deploy:
        runs-on: ubuntu-latest
        needs: test
        if: github.ref == 'refs/heads/main'

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            # Build or publish package (example placeholder)
            - name: Deploy to Packagist (Optional)
              env:
                  PACKAGIST_AUTH_TOKEN: ${{ secrets.PACKAGIST_AUTH_TOKEN }}
              run: |
                  composer config --global github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}
                  composer publish
